{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "http://localhost:5005"
    }
  ],
  "info": {
    "title": "DSNP Gateway Prototype API Documentation",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/auth/provider": {
      "get": {
        "operationId": "authProvider",
        "summary": "Return the delegation and provider information",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/auth/login": {
      "post": {
        "operationId": "authLogin2",
        "summary": "Use Wallet Proxy to login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/logout": {
      "post": {
        "operationId": "authLogout",
        "summary": "Logout and invalidate the access token",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "201": {
            "description": "Successful response"
          }
        }
      }
    },
    "/v1/auth/account": {
      "get": {
        "operationId": "authAccount",
        "summary": "For polling to get the created account as authCreate can take time",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "202": {
            "description": "Account still pending creation"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthAccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/content/{dsnpId}": {
      "get": {
        "operationId": "getUserFeed",
        "summary": "Get recent posts from a user, paginated",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "oldestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBroadcast"
                }
              }
            }
          }
        }
      }
    },
    "/v1/content/feed": {
      "get": {
        "operationId": "getFeed",
        "summary": "Get the Feed for the current user, paginated",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "parameters": [
          {
            "name": "newestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "oldestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBroadcast"
                }
              }
            }
          }
        }
      }
    },
    "/v1/content/discover": {
      "get": {
        "operationId": "getDiscover",
        "summary": "Get the Discovery Feed for the current user, paginated",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "parameters": [
          {
            "name": "newestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "oldestBlockNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBroadcast"
                }
              }
            }
          }
        }
      }
    },
    "/v1/content/create": {
      "post": {
        "operationId": "createBroadcast",
        "summary": "Create a new post",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastExtended"
                }
              }
            }
          }
        }
      }
    },
    "/v1/content/{dsnpId}/{contentHash}": {
      "get": {
        "operationId": "getContent",
        "summary": "Get details of a specific post",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentHash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastExtended"
                }
              }
            }
          },
          "404": {
            "description": "Content not found"
          }
        }
      }
    },
    "/v1/content/{type}/{contentHash}": {
      "put": {
        "operationId": "editContent",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "summary": "Edit the content of a specific post",
        "parameters": [
          {
            "name": "contentHash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "description": "Broadcast or Reply",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPostRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastExtended"
                }
              }
            }
          }
        }
      }
    },
    "/v1/graph/{dsnpId}/following": {
      "get": {
        "operationId": "userFollowing",
        "summary": "Get a list of users that a specific user follows",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "description": "Array of DSNP Ids",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/graph/{dsnpId}/follow": {
      "post": {
        "operationId": "graphFollow",
        "summary": "Follow a user",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "201": {
            "description": "Successful response"
          }
        }
      }
    },
    "/v1/graph/{dsnpId}/unfollow": {
      "post": {
        "operationId": "graphUnfollow",
        "summary": "Unfollow a user",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "201": {
            "description": "Successful response"
          }
        }
      }
    },
    "/v1/profiles/{dsnpId}": {
      "get": {
        "operationId": "getProfile",
        "summary": "Get profile information for a specific user",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "createProfile",
        "summary": "Create/Edit the profile information for a current user",
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "parameters": [
          {
            "name": "dsnpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfileRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "tokenAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "accessToken"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token invalid or not found"
      }
    },
    "schemas": {
      "ProviderResponse": {
        "type": "object",
        "properties": {
          "nodeUrl": {
            "type": "string"
          },
          "siwfUrl": {
            "type": "string"
          },
          "ipfsGateway": {
            "description": "IPFS Path Style Gateway base URI",
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "schemas": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "network": {
            "type": "string",
            "enum": ["local", "testnet", "mainnet"]
          }
        },
        "required": ["nodeUrl", "siwfUrl", "providerId", "schemas", "network"]
      },
      "ChallengeResponse": {
        "type": "object",
        "properties": {
          "challenge": {
            "type": "string"
          }
        },
        "required": ["challenge"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "algo": {
            "type": "string",
            "enum": ["SR25519"]
          },
          "encoding": {
            "type": "string",
            "enum": ["hex"]
          },
          "encodedValue": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          },
          "challenge": {
            "type": "string"
          }
        },
        "required": [
          "algo",
          "encodedValue",
          "encoding",
          "publicKey",
          "challenge"
        ]
      },
      "WalletLoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "expires": {
            "type": "integer"
          },
          "dsnpId": {
            "type": "string"
          },
          "handle": {
            "type": "string"
          }
        },
        "required": ["expires", "accessToken"]
      },
      "WalletLoginRequest": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 1,
        "additionalProperties": false,
        "properties": {
          "signIn": {
            "type": "object",
            "properties": {
              "siwsPayload": {
                "type": "object",
                "required": ["message", "signature"],
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "signature": {
                    "type": "string"
                  }
                }
              },
              "error": {
                "type": "object",
                "required": ["message"],
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "signUp": {
            "type": "object",
            "properties": {
              "extrinsics": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["pallet", "extrinsicName", "encodedExtrinsic"],
                  "properties": {
                    "pallet": {
                      "type": "string"
                    },
                    "extrinsicName": {
                      "type": "string"
                    },
                    "encodedExtrinsic": {
                      "type": "string"
                    }
                  }
                }
              },
              "error": {
                "type": "object",
                "required": ["message"],
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "expires": {
            "type": "integer"
          },
          "dsnpId": {
            "type": "string"
          }
        },
        "required": ["expires", "accessToken", "dsnpId"]
      },
      "CreateIdentityRequest": {
        "type": "object",
        "properties": {
          "addProviderSignature": {
            "type": "string"
          },
          "algo": {
            "type": "string",
            "enum": ["SR25519"]
          },
          "baseHandle": {
            "type": "string"
          },
          "encoding": {
            "type": "string",
            "enum": ["hex"]
          },
          "expiration": {
            "type": "number"
          },
          "handleSignature": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          }
        },
        "required": [
          "addProviderSignature",
          "algo",
          "baseHandle",
          "encoding",
          "expiration",
          "handleSignature",
          "publicKey"
        ]
      },
      "CreateIdentityResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "expires": {
            "type": "integer"
          }
        },
        "required": ["expires", "accessToken"]
      },
      "AuthAccountResponse": {
        "type": "object",
        "properties": {
          "dsnpId": {
            "type": "string"
          },
          "displayHandle": {
            "type": "string"
          }
        },
        "required": ["dsnpId"]
      },
      "DelegateRequest": {
        "type": "object",
        "properties": {
          "algo": {
            "type": "string",
            "enum": ["SR25519"]
          },
          "encoding": {
            "type": "string",
            "enum": ["hex"]
          },
          "encodedValue": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          }
        },
        "required": ["algo", "encodedValue", "encoding", "publicKey"]
      },
      "DelegateResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "expires": {
            "type": "integer"
          }
        },
        "required": ["expires", "accessToken"]
      },
      "HandlesResponse": {
        "type": "object",
        "properties": {
          "publicKey": {
            "type": "string"
          },
          "handle": {
            "type": "string"
          }
        },
        "required": ["publicKey", "handle"]
      },
      "PaginatedBroadcast": {
        "type": "object",
        "properties": {
          "newestBlockNumber": {
            "type": "integer"
          },
          "oldestBlockNumber": {
            "type": "integer"
          },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BroadcastExtended"
            }
          }
        },
        "required": ["newestBlockNumber", "oldestBlockNumber", "posts"]
      },
      "BroadcastExtended": {
        "type": "object",
        "properties": {
          "fromId": {
            "type": "string"
          },
          "contentHash": {
            "type": "string"
          },
          "content": {
            "description": "JSON-encoded Activity Content Note",
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the post"
          },
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplyExtended"
            },
            "description": "Array of ReplyExtended objects"
          }
        },
        "required": ["fromId", "contentHash", "content", "timestamp"]
      },
      "ReplyExtended": {
        "type": "object",
        "properties": {
          "fromId": {
            "type": "string"
          },
          "contentHash": {
            "type": "string"
          },
          "content": {
            "description": "JSON-encoded Activity Content Note",
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the post"
          },
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplyExtended"
            },
            "description": "Array of ReplyExtended objects"
          }
        },
        "required": ["fromId", "contentHash", "content", "timestamp"]
      },
      "CreatePostRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "inReplyTo": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        },
        "required": ["content"]
      },
      "EditPostRequest": {
        "type": "object",
        "properties": {
          "targetContentHash": {
            "type": "string"
          },
          "targetAnnouncementType": {
            "type": "integer"
          },
          "content": {
            "type": "string"
          }
        },
        "required": ["content", "targetAnnouncementType", "targetContentHash"]
      },
      "Profile": {
        "type": "object",
        "properties": {
          "fromId": {
            "type": "string"
          },
          "contentHash": {
            "type": "string"
          },
          "content": {
            "description": "JSON-encoded Activity Content Note",
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the post"
          },
          "displayHandle": {
            "type": "string"
          }
        },
        "required": ["fromId", "contentHash", "content", "timestamp"]
      },
      "EditProfileRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "required": ["content"]
      }
    }
  }
}
